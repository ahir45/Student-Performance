* There are two CSV files: 'student-mat.csv' and 'student-por.csv' each containing student performance in math and portugese language  

* let's use the 'student-mat.csv' file to predict student performance in math

import pandas as pd
df_student = pd.read_csv('student-mat.csv', sep=';')
df_student.head()

* The dataset contains 33 columns each having different information about students like adress, family details and performance.

df_student.describe()

df_student.shape

* From above dataset we can identify our target variable as G3, this being regression problem we will use regression models to predict student performance

* Our dataset has various categorical and descriptive variables. As this is linear regression problem we shall use one hot encoding to handle categorical variables.

# Use one-hot encoding to convert categorical variables into numerical ones
df_student_encoded = pd.get_dummies(df_student, drop_first=True)

df_student_encoded.head()


# Train Test split

from sklearn.model_selection import train_test_split
# Define the feature set X and the target y
X_student = df_student_encoded.drop('G3', axis=1)
y_student = df_student_encoded['G3']

X_train_student, X_test_student, y_train_student, y_test_student = train_test_split(X_student, y_student, test_size=0.2, random_state=42)

# Model Training

from sklearn.linear_model import LinearRegression
lr = LinearRegression()

# Fit the model to the training data
lr.fit(X_train_student, y_train_student)

# Predict the test data
y_pred_student = lr.predict(X_test_student)

# Evaluation metrics

from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
# Compute evaluation metrics
mse_student = mean_squared_error(y_test_student, y_pred_student)
mae_student = mean_absolute_error(y_test_student, y_pred_student)
r2_student = r2_score(y_test_student, y_pred_student)

mse_student, mae_student, r2_student
